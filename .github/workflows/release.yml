name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Extract version from tag
      id: extract_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="${GITHUB_REF#refs/tags/}"
        fi
        VERSION="${TAG#v}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        
    - name: Update pom.xml version
      run: |
        mvn versions:set -DnewVersion=${{ steps.extract_version.outputs.version }}
        mvn versions:commit
        
    - name: Run tests
      run: mvn clean test
      
    - name: Build executable JAR
      run: mvn clean package
      
    - name: Create distribution structure
      run: |
        mkdir -p dist/komootgpx-${{ steps.extract_version.outputs.version }}/bin
        cp target/komootgpx-${{ steps.extract_version.outputs.version }}.jar dist/komootgpx-${{ steps.extract_version.outputs.version }}/
        cp README.md dist/komootgpx-${{ steps.extract_version.outputs.version }}/
        cp LICENSE dist/komootgpx-${{ steps.extract_version.outputs.version }}/
        
    - name: Create Unix shell script
      run: |
        cat > dist/komootgpx-${{ steps.extract_version.outputs.version }}/bin/komootgpx << 'EOF'
        #!/bin/bash
        # komootgpx - Extract GPX tracks from Komoot tours
        # Usage: komootgpx [OPTIONS] <URL>
        
        SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        JAR_FILE="$SCRIPT_DIR/../komootgpx-${{ steps.extract_version.outputs.version }}.jar"
        
        if [ ! -f "$JAR_FILE" ]; then
            echo "Error: JAR file not found at $JAR_FILE" >&2
            exit 1
        fi
        
        if ! command -v java &> /dev/null; then
            echo "Error: Java is not installed or not in PATH" >&2
            echo "Please install Java 11 or higher" >&2
            exit 1
        fi
        
        exec java -jar "$JAR_FILE" "$@"
        EOF
        chmod +x dist/komootgpx-${{ steps.extract_version.outputs.version }}/bin/komootgpx
        
    - name: Create Windows batch script
      run: |
        cat > dist/komootgpx-${{ steps.extract_version.outputs.version }}/bin/komootgpx.bat << 'EOF'
        @echo off
        rem komootgpx - Extract GPX tracks from Komoot tours
        rem Usage: komootgpx [OPTIONS] <URL>
        
        set "SCRIPT_DIR=%~dp0"
        set "JAR_FILE=%SCRIPT_DIR%..\komootgpx-${{ steps.extract_version.outputs.version }}.jar"
        
        if not exist "%JAR_FILE%" (
            echo Error: JAR file not found at %JAR_FILE% >&2
            exit /b 1
        )
        
        java -jar "%JAR_FILE%" %*
        EOF
        
    - name: Create archive
      run: |
        cd dist
        zip -r komootgpx-${{ steps.extract_version.outputs.version }}.zip komootgpx-${{ steps.extract_version.outputs.version }}/
        
    - name: Generate checksum
      run: |
        cd dist
        sha256sum komootgpx-${{ steps.extract_version.outputs.version }}.zip > komootgpx-${{ steps.extract_version.outputs.version }}.zip.sha256
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.tag }}
        release_name: Release ${{ steps.extract_version.outputs.tag }}
        body: |
          ## What's Changed
          
          * komootgpx ${{ steps.extract_version.outputs.version }}
          
          ## Download
          
          Download `komootgpx-${{ steps.extract_version.outputs.version }}.zip` and extract it.
          
          ## Usage
          
          After extraction:
          ```bash
          # Linux/macOS (set executable permission first)
          chmod +x bin/komootgpx
          ./bin/komootgpx --help
          
          # Windows
          bin\komootgpx.bat --help
          
          # Or directly with Java (any platform)
          java -jar komootgpx-${{ steps.extract_version.outputs.version }}.jar --help
          ```
          
          ## Requirements
          
          - Java 11 or higher
          
          ## Verification
          
          SHA256 checksum is provided to verify download integrity.
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/komootgpx-${{ steps.extract_version.outputs.version }}.zip
        asset_name: komootgpx-${{ steps.extract_version.outputs.version }}.zip
        asset_content_type: application/zip
        
    - name: Upload Checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/komootgpx-${{ steps.extract_version.outputs.version }}.zip.sha256
        asset_name: komootgpx-${{ steps.extract_version.outputs.version }}.zip.sha256
        asset_content_type: text/plain